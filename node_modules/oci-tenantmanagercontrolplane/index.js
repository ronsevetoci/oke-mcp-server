"use strict";
/**
 * Organizations API
 * Use the Organizations API to consolidate multiple OCI tenancies into an organization, and centrally manage your tenancies and organization resources. For more information, see [Organization Management Overview](https://docs.oracle.com/iaas/Content/General/Concepts/organization_management_overview.htm).
 * OpenAPI spec version: 20230401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestWaiter = exports.WorkRequestClient = exports.SubscriptionWaiter = exports.SubscriptionClient = exports.SenderInvitationWaiter = exports.SenderInvitationClient = exports.RecipientInvitationWaiter = exports.RecipientInvitationClient = exports.OrganizationWaiter = exports.OrganizationClient = exports.OrdersClient = exports.LinkWaiter = exports.LinkClient = exports.GovernanceClient = exports.DomainGovernanceWaiter = exports.DomainGovernanceClient = exports.DomainWaiter = exports.DomainClient = exports.responses = exports.requests = exports.models = void 0;
const requests = __importStar(require("./lib/request"));
exports.requests = requests;
const models = __importStar(require("./lib/model"));
exports.models = models;
const responses = __importStar(require("./lib/response"));
exports.responses = responses;
const client = __importStar(require("./lib/client"));
const domain_waiter = __importStar(require("./lib/domain-waiter"));
const domaingovernance_waiter = __importStar(require("./lib/domaingovernance-waiter"));
const link_waiter = __importStar(require("./lib/link-waiter"));
const organization_waiter = __importStar(require("./lib/organization-waiter"));
const recipientinvitation_waiter = __importStar(require("./lib/recipientinvitation-waiter"));
const senderinvitation_waiter = __importStar(require("./lib/senderinvitation-waiter"));
const subscription_waiter = __importStar(require("./lib/subscription-waiter"));
const workrequest_waiter = __importStar(require("./lib/workrequest-waiter"));
exports.DomainClient = client.DomainClient;
exports.DomainWaiter = domain_waiter.DomainWaiter;
exports.DomainGovernanceClient = client.DomainGovernanceClient;
exports.DomainGovernanceWaiter = domaingovernance_waiter.DomainGovernanceWaiter;
exports.GovernanceClient = client.GovernanceClient;
exports.LinkClient = client.LinkClient;
exports.LinkWaiter = link_waiter.LinkWaiter;
exports.OrdersClient = client.OrdersClient;
exports.OrganizationClient = client.OrganizationClient;
exports.OrganizationWaiter = organization_waiter.OrganizationWaiter;
exports.RecipientInvitationClient = client.RecipientInvitationClient;
exports.RecipientInvitationWaiter = recipientinvitation_waiter.RecipientInvitationWaiter;
exports.SenderInvitationClient = client.SenderInvitationClient;
exports.SenderInvitationWaiter = senderinvitation_waiter.SenderInvitationWaiter;
exports.SubscriptionClient = client.SubscriptionClient;
exports.SubscriptionWaiter = subscription_waiter.SubscriptionWaiter;
exports.WorkRequestClient = client.WorkRequestClient;
exports.WorkRequestWaiter = workrequest_waiter.WorkRequestWaiter;
//# sourceMappingURL=index.js.map