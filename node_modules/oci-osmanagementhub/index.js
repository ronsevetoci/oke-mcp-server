"use strict";
/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds.
For more information, see [Overview of OS Management Hub](https://docs.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkRequestWaiter = exports.WorkRequestClient = exports.SoftwareSourceWaiter = exports.SoftwareSourceClient = exports.ScheduledJobWaiter = exports.ScheduledJobClient = exports.ReportingManagedInstanceClient = exports.OnboardingWaiter = exports.OnboardingClient = exports.ManagementStationWaiter = exports.ManagementStationClient = exports.ManagedInstanceGroupWaiter = exports.ManagedInstanceGroupClient = exports.ManagedInstanceClient = exports.LifecycleEnvironmentWaiter = exports.LifecycleEnvironmentClient = exports.EventWaiter = exports.EventClient = exports.responses = exports.requests = exports.models = void 0;
const requests = __importStar(require("./lib/request"));
exports.requests = requests;
const models = __importStar(require("./lib/model"));
exports.models = models;
const responses = __importStar(require("./lib/response"));
exports.responses = responses;
const client = __importStar(require("./lib/client"));
const event_waiter = __importStar(require("./lib/event-waiter"));
const lifecycleenvironment_waiter = __importStar(require("./lib/lifecycleenvironment-waiter"));
const managedinstancegroup_waiter = __importStar(require("./lib/managedinstancegroup-waiter"));
const managementstation_waiter = __importStar(require("./lib/managementstation-waiter"));
const onboarding_waiter = __importStar(require("./lib/onboarding-waiter"));
const scheduledjob_waiter = __importStar(require("./lib/scheduledjob-waiter"));
const softwaresource_waiter = __importStar(require("./lib/softwaresource-waiter"));
const workrequest_waiter = __importStar(require("./lib/workrequest-waiter"));
exports.EventClient = client.EventClient;
exports.EventWaiter = event_waiter.EventWaiter;
exports.LifecycleEnvironmentClient = client.LifecycleEnvironmentClient;
exports.LifecycleEnvironmentWaiter = lifecycleenvironment_waiter.LifecycleEnvironmentWaiter;
exports.ManagedInstanceClient = client.ManagedInstanceClient;
exports.ManagedInstanceGroupClient = client.ManagedInstanceGroupClient;
exports.ManagedInstanceGroupWaiter = managedinstancegroup_waiter.ManagedInstanceGroupWaiter;
exports.ManagementStationClient = client.ManagementStationClient;
exports.ManagementStationWaiter = managementstation_waiter.ManagementStationWaiter;
exports.OnboardingClient = client.OnboardingClient;
exports.OnboardingWaiter = onboarding_waiter.OnboardingWaiter;
exports.ReportingManagedInstanceClient = client.ReportingManagedInstanceClient;
exports.ScheduledJobClient = client.ScheduledJobClient;
exports.ScheduledJobWaiter = scheduledjob_waiter.ScheduledJobWaiter;
exports.SoftwareSourceClient = client.SoftwareSourceClient;
exports.SoftwareSourceWaiter = softwaresource_waiter.SoftwareSourceWaiter;
exports.WorkRequestClient = client.WorkRequestClient;
exports.WorkRequestWaiter = workrequest_waiter.WorkRequestWaiter;
//# sourceMappingURL=index.js.map